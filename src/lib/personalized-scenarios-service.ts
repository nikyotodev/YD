/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö AI-—Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
 * –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–∑—É—á–µ–Ω–∏—è –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞
 */
import type {
  UserInterest,
  GermanLevel,
  InterestData,
  ScenarioSession,
  DialogueMessage,
  PersonalizedContent,
  AIPromptConfig,
  SpeechSettings,
  ScenarioFeedback,
} from "@/types/personalized-scenarios";
// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è OpenRouter API
const OPENROUTER_CONFIG = {
  apiKey:
    process.env.NEXT_PUBLIC_OPENROUTER_API_KEY ||
    "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",
  model: "deepseek/deepseek-chat-v3-0324:free",
  baseUrl: "https://openrouter.ai/api/v1/chat/completions",
};
// –î–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const INTERESTS_DATA: InterestData[] = [
  {
    id: "football",
    title: "–§—É—Ç–±–æ–ª ‚öΩ",
    description: "–ò–∑—É—á–∞–π—Ç–µ –Ω–µ–º–µ—Ü–∫–∏–π —á–µ—Ä–µ–∑ —Ñ—É—Ç–±–æ–ª—å–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏ –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
    icon: "‚öΩ",
    color: "text-green-600",
    gradient: "from-green-500 to-emerald-600",
    scenarios: [],
  },
  {
    id: "cooking",
    title: "–ö—É–ª–∏–Ω–∞—Ä–∏—è üë®‚Äçüç≥",
    description: "–ì–æ—Ç–æ–≤—å—Ç–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –Ω–µ–º–µ—Ü–∫–∏–µ –±–ª—é–¥–∞ –∏ –∏–∑—É—á–∞–π—Ç–µ —è–∑—ã–∫",
    icon: "üë®‚Äçüç≥",
    color: "text-orange-600",
    gradient: "from-orange-500 to-red-600",
    scenarios: [],
  },
  {
    id: "technology",
    title: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ üíª",
    description:
      "–†–∞–±–æ—Ç–∞–π—Ç–µ –≤ –Ω–µ–º–µ—Ü–∫–æ–π IT-–∫–æ–º–ø–∞–Ω–∏–∏ –∏ –∏–∑—É—á–∞–π—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ª–µ–∫—Å–∏–∫—É",
    icon: "üíª",
    color: "text-blue-600",
    gradient: "from-blue-500 to-purple-600",
    scenarios: [],
  },
  {
    id: "travel",
    title: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è ‚úàÔ∏è",
    description: "–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –ì–µ—Ä–º–∞–Ω–∏—é –∏ –∏–∑—É—á–∞–π—Ç–µ —è–∑—ã–∫ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö",
    icon: "‚úàÔ∏è",
    color: "text-sky-600",
    gradient: "from-sky-500 to-blue-600",
    scenarios: [],
  },
  {
    id: "music",
    title: "–ú—É–∑—ã–∫–∞ üéµ",
    description: "–ò–∑—É—á–∞–π—Ç–µ –Ω–µ–º–µ—Ü–∫–∏–π —á–µ—Ä–µ–∑ –º—É–∑—ã–∫—É –∏ –∫—É–ª—å—Ç—É—Ä—É",
    icon: "üéµ",
    color: "text-purple-600",
    gradient: "from-purple-500 to-pink-600",
    scenarios: [],
  },
  {
    id: "business",
    title: "–ë–∏–∑–Ω–µ—Å üíº",
    description: "–í–µ–¥–∏—Ç–µ –¥–µ–ª–æ–≤—ã–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –∏ –∏–∑—É—á–∞–π—Ç–µ –±–∏–∑–Ω–µ—Å-–Ω–µ–º–µ—Ü–∫–∏–π",
    icon: "üíº",
    color: "text-gray-700",
    gradient: "from-gray-600 to-slate-700",
    scenarios: [],
  },
];
// AI –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –∏ —É—Ä–æ–≤–Ω–µ–π
const AI_PROMPTS: AIPromptConfig = {
  systemPrompt: `–¢—ã - –≠–º–∏–ª–∏—è, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞. –°–æ–∑–¥–∞–µ—à—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞.
–ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞—Ç—å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –¥–∏–∞–ª–æ–≥-—Å—Ü–µ–Ω–∞—Ä–∏–π –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º —è–∑—ã–∫–µ, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
–°–¢–†–£–ö–¢–£–†–ê –û–¢–í–ï–¢–ê:
1. –ö—Ä–∞—Ç–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≤–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–π (–Ω–∞ —Ä—É—Å—Å–∫–æ–º)
2. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –Ω–µ–º–µ—Ü–∫–∏–º–∏ —Ñ—Ä–∞–∑–∞–º–∏
3. –ü–µ—Ä–µ–≤–æ–¥—ã –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è
4. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
–ü–†–ê–í–ò–õ–ê:
- –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ö–æ–¥—è—â—É—é –ª–µ–∫—Å–∏–∫—É –¥–ª—è —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –î–µ–ª–∞–π –¥–∏–∞–ª–æ–≥–∏ –∂–∏–≤—ã–º–∏ –∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º–∏
- –í–∫–ª—é—á–∞–π –∫—É–ª—å—Ç—É—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ì–µ—Ä–º–∞–Ω–∏–∏
- –ü—Ä–µ–¥–ª–∞–≥–∞–π –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
- –ò—Å–ø—Ä–∞–≤–ª—è–π –æ—à–∏–±–∫–∏ –¥–µ–ª–∏–∫–∞—Ç–Ω–æ
- –ú–æ—Ç–∏–≤–∏—Ä—É–π –∫ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—é –∏–∑—É—á–µ–Ω–∏—è`,
  contextualPrompts: {
    football:
      "–¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å —Ç—Ä–µ–Ω–µ—Ä–æ–º –≤ –Ω–µ–º–µ—Ü–∫–æ–º —Ñ—É—Ç–±–æ–ª—å–Ω–æ–º –∫–ª—É–±–µ. –°–æ–∑–¥–∞–≤–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤ —Å –∏–≥—Ä–æ–∫–∞–º–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –º–∞—Ç—á–µ–π.",
    cooking:
      "–¢—ã —à–µ—Ñ-–ø–æ–≤–∞—Ä –≤ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–º –Ω–µ–º–µ—Ü–∫–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ. –°–æ–∑–¥–∞–≤–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –±–ª—é–¥, –∑–∞–∫–∞–∑–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –æ–±—É—á–µ–Ω–∏—è –ø–æ–≤–∞—Ä—Å–∫–æ–º—É –∏—Å–∫—É—Å—Å—Ç–≤—É.",
    technology:
      "–¢—ã IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –≤ –Ω–µ–º–µ—Ü–∫–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∫–æ–º–ø–∞–Ω–∏–∏. –°–æ–∑–¥–∞–≤–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å–æ–≤–µ—â–∞–Ω–∏–π, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.",
    travel:
      "–¢—ã –≥–∏–¥ –ø–æ –ì–µ—Ä–º–∞–Ω–∏–∏. –°–æ–∑–¥–∞–≤–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–∏ —ç–∫—Å–∫—É—Ä—Å–∏–π, –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–µ–ª–µ–π, –æ–±—â–µ–Ω–∏—è —Å —Ç—É—Ä–∏—Å—Ç–∞–º–∏.",
    music:
      "–¢—ã –º—É–∑—ã–∫–∞–Ω—Ç –≤ –ì–µ—Ä–º–∞–Ω–∏–∏. –°–æ–∑–¥–∞–≤–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤, –∑–∞–ø–∏—Å–∏ –∞–ª—å–±–æ–º–æ–≤, –∏–Ω—Ç–µ—Ä–≤—å—é.",
    business:
      "–¢—ã –±–∏–∑–Ω–µ—Å-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –≤ –ì–µ—Ä–º–∞–Ω–∏–∏. –°–æ–∑–¥–∞–≤–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π, –¥–µ–ª–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á.",
    art: "–¢—ã —Ö—É–¥–æ–∂–Ω–∏–∫ –≤ –ì–µ—Ä–º–∞–Ω–∏–∏. –°–æ–∑–¥–∞–≤–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–∏ –≤—ã—Å—Ç–∞–≤–æ–∫, –ø—Ä–æ–¥–∞–∂–∏ –∫–∞—Ä—Ç–∏–Ω, —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –≤—Å—Ç—Ä–µ—á.",
    gaming:
      "–¢—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏–≥—Ä –≤ –ì–µ—Ä–º–∞–Ω–∏–∏. –°–æ–∑–¥–∞–≤–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π –∏–≥—Ä, —Ä–∞–±–æ—Ç—ã –≤ –∫–æ–º–∞–Ω–¥–µ.",
    science:
      "–¢—ã —É—á–µ–Ω—ã–π –≤ –Ω–µ–º–µ—Ü–∫–æ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ. –°–æ–∑–¥–∞–≤–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤, –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–π.",
    fashion:
      "–¢—ã –º–æ–¥–µ–ª—å–µ—Ä –≤ –ì–µ—Ä–º–∞–Ω–∏–∏. –°–æ–∑–¥–∞–≤–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø–æ–∫–∞–∑–æ–≤ –º–æ–¥, —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.",
  },
  levelAdaptation: {
    A1: {
      vocabulary:
        "–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—É—é –ª–µ–∫—Å–∏–∫—É: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Å–µ–º—å—è, –µ–¥–∞, —á–∏—Å–ª–∞, –≤—Ä–µ–º—è, –ø—Ä–æ—Å—Ç—ã–µ –¥–µ–π—Å—Ç–≤–∏—è",
      grammar:
        "–ù–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è, –ø—Ä–æ—Å—Ç—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –æ—Å–Ω–æ–≤–Ω—ã–µ –∞—Ä—Ç–∏–∫–ª–∏ der/die/das",
      complexity: "–û—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã–µ —Ñ—Ä–∞–∑—ã, –º–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π, –º–µ–¥–ª–µ–Ω–Ω—ã–π —Ç–µ–º–ø",
    },
    A2: {
      vocabulary:
        "–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –±–∞–∑–æ–≤–∞—è –ª–µ–∫—Å–∏–∫–∞: –¥–æ–º, —Ä–∞–±–æ—Ç–∞, —Ö–æ–±–±–∏, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è, –ø–æ–∫—É–ø–∫–∏",
      grammar:
        "–ü—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è (Perfekt), –º–æ–¥–∞–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã, –ø—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–¥–∞—Ç–æ—á–Ω—ã–µ",
      complexity: "–ü—Ä–æ—Å—Ç—ã–µ –¥–∏–∞–ª–æ–≥–∏, –ø–æ–Ω—è—Ç–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —É—Å–ª–æ–∂–Ω–µ–Ω–∏–µ",
    },
    B1: {
      vocabulary:
        "–°—Ä–µ–¥–Ω—è—è –ª–µ–∫—Å–∏–∫–∞: –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è, –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏, –∫—É–ª—å—Ç—É—Ä–∞, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
      grammar: "–í—Å–µ –≤—Ä–µ–º–µ–Ω–∞, —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –ø–∞—Å—Å–∏–≤–Ω—ã–π –∑–∞–ª–æ–≥",
      complexity: "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –¥–∏–∞–ª–æ–≥–∏, –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –º–Ω–µ–Ω–∏–π, –æ–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞–Ω–æ–≤",
    },
    B2: {
      vocabulary:
        "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –ª–µ–∫—Å–∏–∫–∞: —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—è, –∏–¥–∏–æ–º—ã, —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å",
      grammar: "–°–ª–æ–∂–Ω–∞—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞, –∫–æ–Ω—ä—é–Ω–∫—Ç–∏–≤, –ø—Ä–∏—á–∞—Å—Ç–Ω—ã–µ –æ–±–æ—Ä–æ—Ç—ã",
      complexity: "–î–∏—Å–∫—É—Å—Å–∏–∏, –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ü–∏—è, —Å–ª–æ–∂–Ω—ã–µ —Ç–µ–º—ã",
    },
    C1: {
      vocabulary:
        "–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å: –Ω–∞—É—á–Ω–∞—è –ª–µ–∫—Å–∏–∫–∞, –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è, –Ω—é–∞–Ω—Å—ã",
      grammar:
        "–í—Å—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞, —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã",
      complexity:
        "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ, –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ —Ç–µ–º—ã, –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –Ω—é–∞–Ω—Å—ã",
    },
    C2: {
      vocabulary:
        "–ù–æ—Å–∏—Ç–µ–ª—å—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å: –≤—Å—è –ª–µ–∫—Å–∏–∫–∞, —Å–ª–µ–Ω–≥, —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è",
      grammar: "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–µ –≤–ª–∞–¥–µ–Ω–∏–µ, —Ç–æ–Ω–∫–æ—Å—Ç–∏ —Å—Ç–∏–ª—è, –∞–≤—Ç–æ—Ä—Å–∫–∏–π —è–∑—ã–∫",
      complexity: "–õ—é–±—ã–µ —Ç–µ–º—ã, —é–º–æ—Ä, –∏—Ä–æ–Ω–∏—è, —Å–ª–æ–∂–Ω—ã–µ –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã",
    },
  },
};
export class PersonalizedScenariosService {
  private static instance: PersonalizedScenariosService;
  private speechSynthesis: SpeechSynthesis | null = null;
  constructor() {
    if (typeof window !== "undefined") {
      this.speechSynthesis = window.speechSynthesis;
    }
  }
  static getInstance(): PersonalizedScenariosService {
    if (!PersonalizedScenariosService.instance) {
      PersonalizedScenariosService.instance =
        new PersonalizedScenariosService();
    }
    return PersonalizedScenariosService.instance;
  }
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ AI
  async generatePersonalizedContent(
    interest: UserInterest,
    level: GermanLevel,
    specificTopic?: string,
  ): Promise<PersonalizedContent> {
    try {
      const interestData = INTERESTS_DATA.find((i) => i.id === interest);
      const levelConfig = AI_PROMPTS.levelAdaptation[level];
      const contextPrompt = AI_PROMPTS.contextualPrompts[interest];
      const prompt = `
${AI_PROMPTS.systemPrompt}
–ö–û–ù–¢–ï–ö–°–¢: ${contextPrompt}
–£–†–û–í–ï–ù–¨: ${level}
- –°–ª–æ–≤–∞—Ä—å: ${levelConfig.vocabulary}
- –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞: ${levelConfig.grammar}
- –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${levelConfig.complexity}
–ò–ù–¢–ï–†–ï–°: ${interestData?.title}
${specificTopic ? `–ö–û–ù–ö–†–ï–¢–ù–ê–Ø –¢–ï–ú–ê: ${specificTopic}` : ""}
–°–æ–∑–¥–∞–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π-–¥–∏–∞–ª–æ–≥ –Ω–∞ 10-15 –º–∏–Ω—É—Ç –∏–∑—É—á–µ–Ω–∏—è. –í–∫–ª—é—á–∏:
1. –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Å–∏—Ç—É–∞—Ü–∏—é (–Ω–∞ —Ä—É—Å—Å–∫–æ–º)
2. 5-7 —Ä–µ–ø–ª–∏–∫ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
3. 3-4 –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è
4. –ö—É–ª—å—Ç—É—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
5. –í–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏
–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ - JSON:
{
  "greeting": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≤–≤–µ–¥–µ–Ω–∏–µ",
  "scenario": "–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è",
  "characters": [{"name": "–ò–º—è", "role": "–†–æ–ª—å", "personality": "–•–∞—Ä–∞–∫—Ç–µ—Ä"}],
  "objectives": ["–¶–µ–ª—å 1", "–¶–µ–ª—å 2"],
  "vocabulary": ["—Å–ª–æ–≤–æ1", "—Å–ª–æ–≤–æ2"],
  "cultural_context": "–ö—É–ª—å—Ç—É—Ä–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
}`;
      const response = await fetch(OPENROUTER_CONFIG.baseUrl, {
        method: "POST",
        headers: {
          Authorization: `Bearer ${OPENROUTER_CONFIG.apiKey}`,
          "Content-Type": "application/json",
          "X-Title": "Personalized German Scenarios",
        },
        body: JSON.stringify({
          model: OPENROUTER_CONFIG.model,
          messages: [{ role: "user", content: prompt }],
          temperature: 0.8,
          max_tokens: 1200,
        }),
      });
      if (!response.ok) {
        throw new Error(`AI API error: ${response.status}`);
      }
      const data = await response.json();
      const content = data.choices[0]?.message?.content || "";
      // –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
      try {
        const jsonMatch = content.match(/\{[\s\S]*\}/);
        if (jsonMatch) {
          const parsedContent = JSON.parse(jsonMatch[0]);
          return parsedContent;
        }
      } catch (parseError) {
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–∞—Ä—Å–∏—Ç—å JSON, —Å–æ–∑–¥–∞–µ–º fallback –∫–æ–Ω—Ç–µ–Ω—Ç
      }
      // Fallback –∫–æ–Ω—Ç–µ–Ω—Ç –µ—Å–ª–∏ AI –Ω–µ –≤–µ—Ä–Ω—É–ª –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π JSON
      return this.createFallbackContent(interest, level);
    } catch (error) {
      throw new Error(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${error}`);
    }
  }
  // –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
  async generateDialogueResponse(
    sessionId: string,
    userInput: string,
    context: ScenarioSession,
  ): Promise<DialogueMessage> {
    try {
      const levelConfig = AI_PROMPTS.levelAdaptation[context.level];
      const contextPrompt = AI_PROMPTS.contextualPrompts[context.interest];
      const prompt = `
–ü—Ä–æ–¥–æ–ª–∂–∏ –¥–∏–∞–ª–æ–≥ –≤ —Ä–∞–º–∫–∞—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è "${context.interest}".
–£–†–û–í–ï–ù–¨: ${context.level} - ${levelConfig.complexity}
–ö–û–ù–¢–ï–ö–°–¢: ${contextPrompt}
–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –°–ö–ê–ó–ê–õ: "${userInput}"
–û—Ç–≤–µ—Ç—å –∫–∞–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂ —Å—Ü–µ–Ω–∞—Ä–∏—è:
1. –î–∞–π –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º —è–∑—ã–∫–µ (–ø–æ–¥—Ö–æ–¥—è—â–∏–π —É—Ä–æ–≤–Ω—é)
2. –£–∫–∞–∂–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
3. –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ - –¥–µ–ª–∏–∫–∞—Ç–Ω–æ –∏—Å–ø—Ä–∞–≤—å
4. –ü—Ä–µ–¥–ª–æ–∂–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞
–§–æ—Ä–º–∞—Ç JSON:
{
  "germanText": "–û—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º",
  "russianTranslation": "–ü–µ—Ä–µ–≤–æ–¥",
  "feedback": "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∏–ª–∏ null",
  "alternatives": ["–í–∞—Ä–∏–∞–Ω—Ç 1", "–í–∞—Ä–∏–∞–Ω—Ç 2"]
}`;
      const response = await fetch(OPENROUTER_CONFIG.baseUrl, {
        method: "POST",
        headers: {
          Authorization: `Bearer ${OPENROUTER_CONFIG.apiKey}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          model: OPENROUTER_CONFIG.model,
          messages: [{ role: "user", content: prompt }],
          temperature: 0.7,
          max_tokens: 600,
        }),
      });
      if (!response.ok) {
        throw new Error(`AI API error: ${response.status}`);
      }
      const data = await response.json();
      const aiResponse = data.choices[0]?.message?.content || "";
      // –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞ AI
      interface AIDialogueResponse {
        germanText?: string;
        russianTranslation?: string;
        feedback?: string;
        alternatives?: string[];
      }
      let parsedResponse: AIDialogueResponse | null;
      try {
        const jsonMatch = aiResponse.match(/\{[\s\S]*\}/);
        parsedResponse = jsonMatch ? JSON.parse(jsonMatch[0]) : null;
      } catch {
        parsedResponse = null;
      }
      return {
        id: Date.now().toString(),
        speaker: "character",
        content:
          parsedResponse?.germanText ||
          "Entschuldigung, ich habe Sie nicht verstanden.",
        germanText: parsedResponse?.germanText,
        russianTranslation: parsedResponse?.russianTranslation,
        timestamp: new Date(),
        feedback: parsedResponse?.feedback,
        alternatives: parsedResponse?.alternatives,
      };
    } catch (error) {
      throw new Error(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∏–∞–ª–æ–≥–∞: ${error}`);
    }
  }
  // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ä–µ—á–∏
  async speak(
    text: string,
    settings: Partial<SpeechSettings> = {},
  ): Promise<void> {
    return new Promise((resolve, reject) => {
      if (!this.speechSynthesis) {
        reject(new Error("Speech Synthesis –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"));
        return;
      }
      const utterance = new SpeechSynthesisUtterance(text);
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      utterance.lang = settings.language || "de-DE";
      utterance.rate = settings.rate || 0.8;
      utterance.pitch = settings.pitch || 1;
      utterance.volume = settings.volume || 1;
      utterance.onend = () => resolve();
      utterance.onerror = (error) => reject(error);
      this.speechSynthesis.speak(utterance);
    });
  }
  // –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  calculateProgress(session: ScenarioSession): ScenarioFeedback {
    const totalMessages = session.dialogue.length;
    const userMessages = session.dialogue.filter((m) => m.speaker === "user");
    const correctMessages = userMessages.filter((m) => m.isCorrect !== false);
    const accuracy =
      userMessages.length > 0
        ? correctMessages.length / userMessages.length
        : 0;
    const engagement = Math.min(
      100,
      (session.userProgress.timeSpent / 600) * 100,
    ); // 10 –º–∏–Ω—É—Ç = 100%
    return {
      overallScore: Math.round((accuracy * 0.7 + engagement * 0.3) * 100),
      strengths: this.identifyStrengths(session),
      improvements: this.identifyImprovements(session),
      vocabularyMastered: session.userProgress.vocabularyLearned,
      grammarPoints: session.userProgress.grammarPracticed,
      nextRecommendations: this.generateRecommendations(session),
      achievements: this.checkAchievements(session),
    };
  }
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  private createFallbackContent(
    interest: UserInterest,
    level: GermanLevel,
  ): PersonalizedContent {
    const interestData = INTERESTS_DATA.find((i) => i.id === interest);
    return {
      greeting: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å—Ü–µ–Ω–∞—Ä–∏–π –∏–∑—É—á–µ–Ω–∏—è –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞!",
      scenario: `–ú—ã –∏–∑—É—á–∞–µ–º –Ω–µ–º–µ—Ü–∫–∏–π —á–µ—Ä–µ–∑ ${interestData?.title}`,
      characters: [
        {
          id: "1",
          name: "Hans",
          role: "–≠–∫—Å–ø–µ—Ä—Ç",
          personality: "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–π",
          background: "–û–ø—ã—Ç–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –∏–∑ –ì–µ—Ä–º–∞–Ω–∏–∏",
        },
      ],
      objectives: [
        "–ò–∑—É—á–∏—Ç—å –Ω–æ–≤—É—é –ª–µ–∫—Å–∏–∫—É",
        "–ü—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ",
        "–ü–æ–Ω—è—Ç—å –∫—É–ª—å—Ç—É—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç",
      ],
      vocabulary: ["Hallo", "Danke", "Bitte"],
      cultural_context: "–í –ì–µ—Ä–º–∞–Ω–∏–∏ —Ü–µ–Ω—è—Ç –≤–µ–∂–ª–∏–≤–æ—Å—Ç—å –∏ –ø—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å",
    };
  }
  private identifyStrengths(session: ScenarioSession): string[] {
    // –õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω
    return ["–•–æ—Ä–æ—à–µ–µ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ", "–ê–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ –¥–∏–∞–ª–æ–≥–µ"];
  }
  private identifyImprovements(session: ScenarioSession): string[] {
    // –õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–±–ª–∞—Å—Ç–µ–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
    return ["–†–∞–±–æ—Ç–∞ –Ω–∞–¥ –∞—Ä—Ç–∏–∫–ª—è–º–∏", "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä–Ω–æ–≥–æ –∑–∞–ø–∞—Å–∞"];
  }
  private generateRecommendations(session: ScenarioSession): string[] {
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    return [
      "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –∏–∑—É—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–∞—Ä—Ç–æ—á–∫–∏",
      "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –≤ —Ç–æ–π –∂–µ —Ç–µ–º–µ",
    ];
  }
  private checkAchievements(
    session: ScenarioSession,
  ): Array<{ id: string; type: string; title: string }> {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    return [];
  }
}
export const personalizedScenariosService =
  PersonalizedScenariosService.getInstance();
