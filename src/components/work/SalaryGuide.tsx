"use client";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { motion } from "framer-motion";
import {
  TrendingUp,
  Code,
  Stethoscope,
  Wrench,
  Calculator,
  Palette,
  Briefcase,
  Building,
  MapPin,
  Euro,
} from "lucide-react";
interface SalaryData {
  id: string;
  icon: React.ComponentType<{ className?: string }>;
  profession: string;
  category: string;
  salaryRange: string;
  averageSalary: string;
  demandLevel: "–í—ã—Å–æ–∫–∏–π" | "–°—Ä–µ–¥–Ω–∏–π" | "–£–º–µ—Ä–µ–Ω–Ω—ã–π";
  germanLevel: string;
  color: string;
}
const salaryData: SalaryData[] = [
  {
    id: "it-developer",
    icon: Code,
    profession: "IT-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
    category: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
    salaryRange: "‚Ç¨45-95K",
    averageSalary: "‚Ç¨65K",
    demandLevel: "–í—ã—Å–æ–∫–∏–π",
    germanLevel: "B1-B2",
    color: "from-blue-500 to-cyan-500",
  },
  {
    id: "engineer",
    icon: Wrench,
    profession: "–ò–Ω–∂–µ–Ω–µ—Ä",
    category: "–¢–µ—Ö–Ω–∏–∫–∞",
    salaryRange: "‚Ç¨48-78K",
    averageSalary: "‚Ç¨58K",
    demandLevel: "–í—ã—Å–æ–∫–∏–π",
    germanLevel: "B2-C1",
    color: "from-orange-500 to-red-500",
  },
  {
    id: "medical-worker",
    icon: Stethoscope,
    profession: "–ú–µ–¥—Ä–∞–±–æ—Ç–Ω–∏–∫",
    category: "–ú–µ–¥–∏—Ü–∏–Ω–∞",
    salaryRange: "‚Ç¨42-68K",
    averageSalary: "‚Ç¨52K",
    demandLevel: "–í—ã—Å–æ–∫–∏–π",
    germanLevel: "C1-C2",
    color: "from-green-500 to-emerald-500",
  },
  {
    id: "financier",
    icon: Calculator,
    profession: "–§–∏–Ω–∞–Ω—Å–∏—Å—Ç",
    category: "–§–∏–Ω–∞–Ω—Å—ã",
    salaryRange: "‚Ç¨45-75K",
    averageSalary: "‚Ç¨58K",
    demandLevel: "–°—Ä–µ–¥–Ω–∏–π",
    germanLevel: "B2-C1",
    color: "from-purple-500 to-violet-500",
  },
  {
    id: "architect",
    icon: Building,
    profession: "–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä",
    category: "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ",
    salaryRange: "‚Ç¨42-62K",
    averageSalary: "‚Ç¨50K",
    demandLevel: "–°—Ä–µ–¥–Ω–∏–π",
    germanLevel: "B2-C1",
    color: "from-gray-500 to-slate-500",
  },
  {
    id: "designer",
    icon: Palette,
    profession: "–î–∏–∑–∞–π–Ω–µ—Ä",
    category: "–ö—Ä–µ–∞—Ç–∏–≤",
    salaryRange: "‚Ç¨35-55K",
    averageSalary: "‚Ç¨43K",
    demandLevel: "–£–º–µ—Ä–µ–Ω–Ω—ã–π",
    germanLevel: "B1-B2",
    color: "from-pink-500 to-rose-500",
  },
];
const cities = [
  { name: "–ú—é–Ω—Ö–µ–Ω", salaryMultiplier: "125%", cost: "–í—ã—Å–æ–∫–∞—è" },
  { name: "–§—Ä–∞–Ω–∫—Ñ—É—Ä—Ç", salaryMultiplier: "120%", cost: "–í—ã—Å–æ–∫–∞—è" },
  { name: "–ì–∞–º–±—É—Ä–≥", salaryMultiplier: "115%", cost: "–°—Ä–µ–¥–Ω—è—è" },
  { name: "–ë–µ—Ä–ª–∏–Ω", salaryMultiplier: "110%", cost: "–°—Ä–µ–¥–Ω—è—è" },
  { name: "–î—é—Å—Å–µ–ª—å–¥–æ—Ä—Ñ", salaryMultiplier: "118%", cost: "–í—ã—Å–æ–∫–∞—è" },
  { name: "–®—Ç—É—Ç–≥–∞—Ä—Ç", salaryMultiplier: "122%", cost: "–í—ã—Å–æ–∫–∞—è" },
];
function SalaryCard({ salary, index }: { salary: SalaryData; index: number }) {
  const IconComponent = salary.icon;
  const getDemandColor = (level: string) => {
    switch (level) {
      case "–í—ã—Å–æ–∫–∏–π": return "bg-green-500/10 text-green-700 border-green-500/20";
      case "–°—Ä–µ–¥–Ω–∏–π": return "bg-yellow-500/10 text-yellow-700 border-yellow-500/20";
      case "–£–º–µ—Ä–µ–Ω–Ω—ã–π": return "bg-orange-500/10 text-orange-700 border-orange-500/20";
      default: return "bg-gray-500/10 text-gray-700 border-gray-500/20";
    }
  };
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      whileInView={{ opacity: 1, y: 0 }}
      viewport={{ once: true }}
      transition={{ duration: 0.5, delay: index * 0.1 }}
    >
      <Card className="group relative overflow-hidden hover:shadow-xl transition-all duration-300 border-border/50 bg-background/80 backdrop-blur-sm">
        <CardContent className="p-6">
          <div className="flex items-start justify-between mb-4">
            <div className="flex items-center gap-3">
              <div className={`w-12 h-12 rounded-lg bg-gradient-to-br ${salary.color} bg-opacity-10 flex items-center justify-center group-hover:scale-110 transition-transform duration-300`}>
                <IconComponent className="h-6 w-6 text-white" />
              </div>
              <div>
                <h3 className="text-lg font-semibold text-foreground">{salary.profession}</h3>
                <p className="text-sm text-muted-foreground">{salary.category}</p>
              </div>
            </div>
            <Badge className={getDemandColor(salary.demandLevel)}>
              {salary.demandLevel} —Å–ø—Ä–æ—Å
            </Badge>
          </div>
          <div className="space-y-3">
            <div className="flex justify-between items-center">
              <span className="text-sm text-muted-foreground">–î–∏–∞–ø–∞–∑–æ–Ω –∑–∞—Ä–ø–ª–∞—Ç:</span>
              <span className="font-semibold text-foreground">{salary.salaryRange}</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-sm text-muted-foreground">–°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞:</span>
              <span className="font-bold text-german-red text-lg">{salary.averageSalary}</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-sm text-muted-foreground">–£—Ä–æ–≤–µ–Ω—å –Ω–µ–º–µ—Ü–∫–æ–≥–æ:</span>
              <Badge variant="outline" className="border-german-gold/20 text-german-red">
                {salary.germanLevel}
              </Badge>
            </div>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}
export function SalaryGuide() {
  return (
    <section id="salaries" className="py-20 bg-muted/30">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
            className="mb-4"
          >
            <Badge
              variant="secondary"
              className="bg-german-red/10 text-german-red border-german-red/20 px-4 py-2"
            >
              <Euro className="h-4 w-4 mr-2" />
              –ó–∞—Ä–ø–ª–∞—Ç—ã –≤ –ì–µ—Ä–º–∞–Ω–∏–∏ 2024
            </Badge>
          </motion.div>
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6, delay: 0.2 }}
            className="text-3xl md:text-5xl font-black mb-6"
          >
            –°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ{" "}
            <span className="relative">
              <span className="relative z-10">–∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å?</span>
              <div className="absolute bottom-1 left-0 w-full h-3 bg-gradient-to-r from-german-red/30 to-german-gold/30 transform -skew-x-12 z-0" />
            </span>
          </motion.h2>
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6, delay: 0.4 }}
            className="text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed"
          >
            –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—Ä–ø–ª–∞—Ç–∞—Ö –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä–∞—Ö, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö –∫ —è–∑—ã–∫—É
            –∏ —Å–ø—Ä–æ—Å–µ –Ω–∞ —Ä—ã–Ω–∫–µ —Ç—Ä—É–¥–∞ –ì–µ—Ä–º–∞–Ω–∏–∏.
          </motion.p>
        </div>
        {/* Salary Cards Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16">
          {salaryData.map((salary, index) => (
            <SalaryCard key={salary.id} salary={salary} index={index} />
          ))}
        </div>
        {/* City Comparison */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.8 }}
          className="bg-background/80 backdrop-blur-sm rounded-2xl p-8 border border-border/50"
        >
          <div className="text-center mb-8">
            <h3 className="text-2xl font-bold mb-3">–ó–∞—Ä–ø–ª–∞—Ç—ã –ø–æ –≥–æ—Ä–æ–¥–∞–º</h3>
            <p className="text-muted-foreground">
              –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∫ –±–∞–∑–æ–≤–æ–π –∑–∞—Ä–ø–ª–∞—Ç–µ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∂–∏–∑–Ω–∏ –≤ –∫—Ä—É–ø–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö
            </p>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {cities.map((city, index) => (
              <motion.div
                key={city.name}
                initial={{ opacity: 0, x: -20 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
                className="flex items-center justify-between p-4 rounded-lg bg-muted/50 border border-border/30"
              >
                <div className="flex items-center gap-3">
                  <MapPin className="h-5 w-5 text-german-red" />
                  <div>
                    <p className="font-semibold">{city.name}</p>
                    <p className="text-sm text-muted-foreground">–°—Ç–æ–∏–º–æ—Å—Ç—å: {city.cost}</p>
                  </div>
                </div>
                <Badge
                  variant="secondary"
                  className="bg-german-gold/10 text-german-red border-german-red/20"
                >
                  {city.salaryMultiplier}
                </Badge>
              </motion.div>
            ))}
          </div>
          <div className="mt-6 p-4 bg-muted/30 rounded-lg border border-border/30">
            <p className="text-sm text-muted-foreground text-center">
              üí° <strong>–°–æ–≤–µ—Ç:</strong> –£—á–∏—Ç—ã–≤–∞–π—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞—Ä–ø–ª–∞—Ç—É, –Ω–æ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∂–∏–∑–Ω–∏.
              –ë–µ—Ä–ª–∏–Ω –º–æ–∂–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ª—É—á—à–∏–π –±–∞–ª–∞–Ω—Å –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤.
            </p>
          </div>
        </motion.div>
      </div>
    </section>
  );
}
