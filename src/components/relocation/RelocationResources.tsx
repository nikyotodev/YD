"use client";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { motion } from "framer-motion";
import {
  ExternalLink,
  FileText,
  MapPin,
  Building,
  Briefcase,
  Home,
  Users,
  CreditCard,
  Shield,
  Plane,
  Car,
  School,
} from "lucide-react";
interface Resource {
  icon: React.ComponentType<{ className?: string }>;
  title: string;
  description: string;
  links: Array<{
    name: string;
    url: string;
    type: "official" | "community" | "commercial";
  }>;
  category: string;
}
const resources: Resource[] = [
  {
    icon: FileText,
    title: "–î–æ–∫—É–º–µ–Ω—Ç—ã –∏ –≤–∏–∑—ã",
    description: "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∞–π—Ç—ã –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
    category: "–î–æ–∫—É–º–µ–Ω—Ç—ã",
    links: [
      { name: "–ù–µ–º–µ—Ü–∫–æ–µ –∫–æ–Ω—Å—É–ª—å—Å—Ç–≤–æ", url: "https://germania.diplo.de/", type: "official" },
      { name: "Blue Card –ø—Ä–æ–≥—Ä–∞–º–º–∞", url: "https://www.make-it-in-germany.com/", type: "official" },
      { name: "–°–∞–π—Ç –∏–º–º–∏–≥—Ä–∞—Ü–∏–∏", url: "https://www.germany-visa.org/", type: "commercial" },
    ],
  },
  {
    icon: Briefcase,
    title: "–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã",
    description: "–õ—É—á—à–∏–µ —Å–∞–π—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π –≤ –ì–µ—Ä–º–∞–Ω–∏–∏",
    category: "–†–∞–±–æ—Ç–∞",
    links: [
      { name: "StepStone", url: "https://www.stepstone.de/", type: "commercial" },
      { name: "Xing Jobs", url: "https://www.xing.com/jobs", type: "commercial" },
      { name: "Indeed –ì–µ—Ä–º–∞–Ω–∏—è", url: "https://de.indeed.com/", type: "commercial" },
    ],
  },
  {
    icon: Home,
    title: "–ü–æ–∏—Å–∫ –∂–∏–ª—å—è",
    description: "–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –∞—Ä–µ–Ω–¥—ã –∫–≤–∞—Ä—Ç–∏—Ä –∏ –¥–æ–º–æ–≤",
    category: "–ñ–∏–ª—å—ë",
    links: [
      { name: "ImmobilienScout24", url: "https://www.immobilienscout24.de/", type: "commercial" },
      { name: "WG-Gesucht", url: "https://www.wg-gesucht.de/", type: "community" },
      { name: "Studenten-WG", url: "https://www.studenten-wg.de/", type: "community" },
    ],
  },
  {
    icon: CreditCard,
    title: "–ë–∞–Ω–∫–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å—ã",
    description: "–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —É—Å–ª—É–≥–∏ –¥–ª—è –∏–º–º–∏–≥—Ä–∞–Ω—Ç–æ–≤",
    category: "–§–∏–Ω–∞–Ω—Å—ã",
    links: [
      { name: "Deutsche Bank", url: "https://www.deutsche-bank.de/", type: "commercial" },
      { name: "N26 Bank", url: "https://n26.com/de", type: "commercial" },
      { name: "Sparkasse", url: "https://www.sparkasse.de/", type: "commercial" },
    ],
  },
  {
    icon: Users,
    title: "–°–æ–æ–±—â–µ—Å—Ç–≤–∞",
    description: "–†—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –≤ –ì–µ—Ä–º–∞–Ω–∏–∏",
    category: "–°–æ–æ–±—â–µ—Å—Ç–≤–æ",
    links: [
      { name: "–†—É—Å—Å–∫–∏–µ –≤ –ì–µ—Ä–º–∞–Ω–∏–∏", url: "https://www.facebook.com/groups/russians.in.germany", type: "community" },
      { name: "–§–æ—Ä—É–º –í–∏–Ω—Å–∫–æ–≥–æ", url: "https://forum.awd.ru/", type: "community" },
      { name: "Telegram —á–∞—Ç—ã", url: "https://t.me/germany_visa_chat", type: "community" },
    ],
  },
  {
    icon: Car,
    title: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
    description: "–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏",
    category: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
    links: [
      { name: "Deutsche Bahn", url: "https://www.bahn.de/", type: "official" },
      { name: "BlaBlaCar", url: "https://www.blablacar.de/", type: "commercial" },
      { name: "MVG M√ºnchen", url: "https://www.mvg.de/", type: "official" },
    ],
  },
];
const quickTips = [
  {
    title: "–ò–∑—É—á–∏—Ç–µ –Ω–µ–º–µ—Ü–∫–∏–π –¥–æ –ø–µ—Ä–µ–µ–∑–¥–∞",
    description: "–ú–∏–Ω–∏–º—É–º B1 —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç –∞–¥–∞–ø—Ç–∞—Ü–∏—é",
    icon: "üéì",
  },
  {
    title: "–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ",
    description: "–ü–µ—Ä–µ–≤–æ–¥—ã –∏ –∞–ø–æ—Å—Ç–∏–ª–∏ –º–æ–≥—É—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤",
    icon: "üìÑ",
  },
  {
    title: "–ù–∞–π–¥–∏—Ç–µ —Ä–∞–±–æ—Ç—É –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ",
    description: "–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ IT-–∫–æ–º–ø–∞–Ω–∏–π –ø—Ä–æ–≤–æ–¥—è—Ç —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –æ–Ω–ª–∞–π–Ω",
    icon: "üíª",
  },
  {
    title: "–ò–∑—É—á–∏—Ç–µ –∫—É–ª—å—Ç—É—Ä—É",
    description: "–ü–æ–Ω–∏–º–∞–Ω–∏–µ –Ω–µ–º–µ—Ü–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã –ø–æ–º–æ–∂–µ—Ç –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
    icon: "üá©üá™",
  },
];
export function RelocationResources() {
  return (
    <section className="py-16 md:py-24 relative overflow-hidden">
      {/* Background decorations */}
      <div className="absolute inset-0 pointer-events-none">
        <div className="absolute top-1/4 right-1/4 w-64 h-64 bg-gradient-to-br from-german-red/5 to-german-gold/5 rounded-full blur-3xl animate-float dark:from-purple-500/10 dark:to-pink-500/10" />
        <div className="absolute bottom-1/4 left-1/4 w-64 h-64 bg-gradient-to-br from-german-gold/5 to-german-red/5 rounded-full blur-3xl animate-float animation-delay-2000 dark:from-pink-500/10 dark:to-purple-500/10" />
      </div>
      <div className="container mx-auto px-4 relative">
        {/* Section header */}
        <div className="text-center mb-16">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="mb-4"
          >
            <Badge
              variant="secondary"
              className="bg-german-red/10 text-german-red border-german-red/20 px-4 py-2 text-sm font-medium dark:bg-purple-500/10 dark:text-purple-300 dark:border-purple-500/20"
            >
              <MapPin className="h-4 w-4 mr-2" />
              –ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è —Ä–µ–ª–æ–∫–∞—Ü–∏–∏
            </Badge>
          </motion.div>
          <motion.h2
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            viewport={{ once: true }}
            className="text-3xl md:text-5xl font-black mb-6 gradient-text"
          >
            –í—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ
          </motion.h2>
          <motion.p
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
            viewport={{ once: true }}
            className="text-lg md:text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed"
          >
            –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –∏ —Å–µ—Ä–≤–∏—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ —Ä–µ–ª–æ–∫–∞—Ü–∏–∏.
            –û—Ç –≤–∏–∑–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–æ –ø–æ–∏—Å–∫–∞ –∂–∏–ª—å—è –∏ —Ä–∞–±–æ—Ç—ã.
          </motion.p>
        </div>
        {/* Resources grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
          {resources.map((resource, index) => {
            const IconComponent = resource.icon;
            return (
              <motion.div
                key={`resource-${resource.title}`}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                viewport={{ once: true }}
                className="group"
              >
                <Card className="h-full glass hover:glass-hover transition-all duration-300 border-border/30 group-hover:border-german-red/30 dark:group-hover:border-purple-500/30">
                  <CardContent className="p-6">
                    {/* Header */}
                    <div className="flex items-center gap-3 mb-4">
                      <div className="w-12 h-12 rounded-full bg-gradient-to-br from-german-red/10 to-german-gold/10 flex items-center justify-center group-hover:from-german-red/20 group-hover:to-german-gold/20 transition-all duration-300 dark:from-purple-500/10 dark:to-pink-500/10 dark:group-hover:from-purple-500/20 dark:group-hover:to-pink-500/20">
                        <IconComponent className="h-6 w-6 text-german-red dark:text-purple-400" />
                      </div>
                      <div>
                        <h3 className="text-lg font-bold text-foreground">
                          {resource.title}
                        </h3>
                        <Badge
                          variant="outline"
                          className="text-xs border-german-red/20 dark:border-purple-500/20"
                        >
                          {resource.category}
                        </Badge>
                      </div>
                    </div>
                    {/* Description */}
                    <p className="text-muted-foreground mb-6 text-sm leading-relaxed">
                      {resource.description}
                    </p>
                    {/* Links */}
                    <div className="space-y-2">
                      {resource.links.map((link, linkIndex) => (
                        <a
                          key={`${resource.title}-link-${linkIndex}`}
                          href={link.url}
                          target="_blank"
                          rel="noopener noreferrer"
                          className="flex items-center justify-between p-2 rounded-lg hover:bg-german-red/5 transition-colors dark:hover:bg-purple-500/5 group/link"
                        >
                          <span className="text-sm font-medium text-foreground">
                            {link.name}
                          </span>
                          <div className="flex items-center gap-2">
                            <Badge
                              variant="outline"
                              className={`text-xs ${
                                link.type === 'official' ? 'border-green-500/30 text-green-600' :
                                link.type === 'community' ? 'border-blue-500/30 text-blue-600' :
                                'border-purple-500/30 text-purple-600'
                              }`}
                            >
                              {link.type === 'official' ? '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π' :
                               link.type === 'community' ? '–°–æ–æ–±—â–µ—Å—Ç–≤–æ' :
                               '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π'}
                            </Badge>
                            <ExternalLink className="h-4 w-4 text-muted-foreground group-hover/link:text-german-red transition-colors dark:group-hover/link:text-purple-400" />
                          </div>
                        </a>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              </motion.div>
            );
          })}
        </div>
        {/* Quick tips */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.6 }}
          viewport={{ once: true }}
          className="text-center"
        >
          <h3 className="text-2xl font-black mb-8 gradient-text">
            –ë—ã—Å—Ç—Ä—ã–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–ª–æ–∫–∞—Ü–∏–∏
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {quickTips.map((tip, index) => (
              <Card
                key={`tip-${tip.title}`}
                className="glass hover:glass-hover transition-all duration-300 border-border/30 hover:border-german-red/30 dark:hover:border-purple-500/30"
              >
                <CardContent className="p-6 text-center">
                  <div className="text-3xl mb-3">{tip.icon}</div>
                  <h4 className="font-bold mb-2 text-foreground">{tip.title}</h4>
                  <p className="text-sm text-muted-foreground leading-relaxed">
                    {tip.description}
                  </p>
                </CardContent>
              </Card>
            ))}
          </div>
        </motion.div>
      </div>
    </section>
  );
}
